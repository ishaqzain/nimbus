// ==========================================================================
// Spacing
// ==========================================================================

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-global-settings: false !default;

@if ($imported-global-settings == false) {
  @warn "Oops! Have you included a global settings files?";
}

//
// Utility classes to put specific spacing values onto elements. The below loop
// will generate us a suite of classes like:
//
//   .u-margin-top {}
//   .u-padding-left--large {}
//   .u-margin-right--small {}
//   .u-padding {}
//   .u-padding-right--none {}
//   .u-padding-horizontal {}
//   .u-padding-horizontal--none {}
//   .u-padding-vertical--small {}
//

$spacing-directions: (
  null: null,
  "-top": "-top",
  "-right": "-right",
  "-bottom": "-bottom",
  "-left": "-left",
  "-horizontal": "-left" "-right",
  "-vertical": "-top" "-bottom",
) !default;

$spacing-properties: (
  "padding": "padding",
  "margin": "margin",
) !default;

$spacing-sizes: (
  null: $global-spacing-unit,
  "--micro": $global-spacing-unit--micro,
  "--tiny": $global-spacing-unit--tiny,
  "--small": $global-spacing-unit--small,
  "--medium": $global-spacing-unit--medium,
  "--large": $global-spacing-unit--large,
  "--huge": $global-spacing-unit--huge,
  "--none": 0,
) !default;

@each $property-namespace, $property in $spacing-properties {
  @each $direction-namespace, $direction-rules in $spacing-directions {
    @each $size-namespace, $size in $spacing-sizes {
      .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {
        @each $direction in $direction-rules {
          #{$property}#{$direction}: rem-calc($size) !important;
        }
      }
    }
  }
}
